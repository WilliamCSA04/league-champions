---
import SpellItem from "@components/SpellItem.astro";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import { Champion, getChampion, getChampions } from "@services/riot";
import { parseToArray } from "@utils/object";
import { getLoadingURL, getPassiveURL, getSpellURL, removeDoubleBR } from "@utils/riot";

export async function getStaticPaths() {
  const dataOfChampions = await getChampions()
  const champions = parseToArray(dataOfChampions)
  const championFullData = await Promise.all(champions.map((champion) => getChampion(champion.id)))
  const pages = championFullData.map((champion) => ({
    name: champion.id,
    champion,
  }))
  return pages.map(({ name, champion }) => {
    return {
      params: { name },
      props: { champion },
    };
  });
}

interface Props {
  champion: Champion
}

const { champion } = Astro.props;
---
<Layout title={champion.name}>
  <Main>
    <div class="flex flex-col p-5 space-y-8">
      <div class="flex grid-cols-2"> 
        <div style="width: 308px; height: 560px" class="bg-slate-900 text-transparent mr-5">
          <img class="max-w-none" src={getLoadingURL(champion.id)} alt={champion.name} class="brightness-75" width="308" height="560" />
        </div>
        <div class="flex flex-col">
          <h2 class="text-2xl font-bold">{champion.name}, {champion.title}</h2>
          <p class="mt-10">
            {champion.lore}
          </p>
          <ul class="mt-5 flex justify-between flex-col flex-grow">
            <SpellItem data={champion.passive} fnHandler={getPassiveURL} />
            {
              champion.spells.map((spell, index) => (
                <SpellItem data={spell} fnHandler={getSpellURL} />
              ))
            }
          </ul>
        </div>
      </div>
      <div>
        <h3 class="text-2xl font-bold mb-4">Skins:</h3>
        <div class="flex justify-between flex-wrap">
          {
            champion.skins.map((skin, index) => {
              const isLazy = index > 5
              return (
                skin.num ? (
                  <div style="width: 308px; height: 560px" class="m-2 text-transparent">
                    <img src={getLoadingURL(champion.id, skin.num)} alt={skin.name} width="308" height="560" loading={isLazy ? 'lazy' : 'eager'} />
                  </div>
                ) : null
              )
            })
          }
        </div>
      </div>
    </div>
  </Main>
</Layout>